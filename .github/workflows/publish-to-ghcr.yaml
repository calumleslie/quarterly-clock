name: Publish to GitHub Container Registry
on: [push, workflow_dispatch]

jobs:
  push_to_ghcr:
    name: Push Docker image to ghcr
    runs-on: ubuntu-24.04

    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Prepare
        id: prepare
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "category=publish" >> $GITHUB_OUTPUT
            echo "kind=release" >> $GITHUB_OUTPUT
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "version=${VERSION}" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == refs/heads/master ]]; then
            echo "category=ignore" >> $GITHUB_OUTPUT
            VERSION=unset
          elif [[ $GITHUB_REF == refs/heads/main ]]; then
            echo "category=ignore" >> $GITHUB_OUTPUT
            VERSION=unset
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            echo "category=publish" >> $GITHUB_OUTPUT
            echo "kind=branch-build" >> $GITHUB_OUTPUT
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
            VERSION_SAFE_BRANCH_NAME=${BRANCH_NAME/\//-}
            VERSION=${VERSION_SAFE_BRANCH_NAME}-${GITHUB_RUN_NUMBER}
            echo "version=${VERSION}" >> $GITHUB_OUTPUT
          else
            echo "category=ignore" >> $GITHUB_OUTPUT
          fi
          echo "build_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          DOCKER_IMAGE=ghcr.io/mikemoraned/quarterly-clock
          echo "docker_image=${DOCKER_IMAGE}" >> $GITHUB_OUTPUT
          DOCKER_TAG="${DOCKER_IMAGE}:${VERSION}"
          echo "docker_tag=${DOCKER_TAG}" >> $GITHUB_OUTPUT

      - name: Information
        run: |
          echo git_ref=$GITHUB_REF
          echo git_sha=$GITHUB_SHA
          echo category=${{ steps.prepare.outputs.category }}
          echo version=${{ steps.prepare.outputs.version }}
          echo kind=${{ steps.prepare.outputs.kind }}
          echo date=${{ steps.prepare.outputs.build_date }}
          echo docker_image=${{ steps.prepare.outputs.docker_image }}
          echo docker_tag=${{ steps.prepare.outputs.docker_tag }}

      - name: Login to ghcr
        if: steps.prepare.outputs.category == 'publish'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        if: steps.prepare.outputs.category == 'publish'
        uses: docker/setup-qemu-action@v3

      - name: Setup Buildx
        if: steps.prepare.outputs.category == 'publish'
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        if: steps.prepare.outputs.category == 'publish'
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and Push
        if: steps.prepare.outputs.category == 'publish'
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ./preview
          platforms: linux/amd64
          tags: "${{ steps.prepare.outputs.docker_tag }}"
          labels: "KIND=${{ steps.prepare.outputs.kind }},BUILD_DATE=${{ steps.prepare.outputs.build_date }},VCS_REF=${GITHUB_SHA}"
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Save Category Locally
        run: |
          echo -n ${{ steps.prepare.outputs.category }} > category.txt

      - name: Save Category to Workflow
        uses: actions/upload-artifact@v4
        with:
          name: category
          path: category.txt

      - name: Save Kind Locally
        if: steps.prepare.outputs.category == 'publish'
        run: |
          echo -n ${{ steps.prepare.outputs.kind }} > kind.txt

      - name: Save Kind to Workflow
        if: steps.prepare.outputs.category == 'publish'
        uses: actions/upload-artifact@v4
        with:
          name: kind
          path: kind.txt

      - name: Save Docker Tag Locally
        if: steps.prepare.outputs.category == 'publish'
        run: |
          echo -n ${{ steps.prepare.outputs.docker_tag }} > docker_tag.txt

      - name: Save Docker Tag to Workflow
        if: steps.prepare.outputs.category == 'publish'
        uses: actions/upload-artifact@v4
        with:
          name: docker_tag
          path: docker_tag.txt

  deploy_to_fly:
    name: Publish Docker image to fly.io
    needs: push_to_ghcr
    runs-on: ubuntu-24.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Load Category
        uses: actions/download-artifact@v4
        with:
          name: category

      - name: Load Kind
        uses: actions/download-artifact@v4
        with:
          name: kind

      - name: Load Docker Tag
        uses: actions/download-artifact@v4
        with:
          name: docker_tag

      - name: Prepare
        id: prepare
        run: |
          CATEGORY=$(cat category.txt)
          echo "category=${CATEGORY}" >> $GITHUB_OUTPUT
          KIND=$(cat kind.txt)
          echo "kind=${KIND}" >> $GITHUB_OUTPUT
          DOCKER_TAG=$(cat docker_tag.txt)
          echo "docker_tag=${DOCKER_TAG}" >> $GITHUB_OUTPUT

      - name: Information
        run: |
          echo category=${{ steps.prepare.outputs.category }}
          echo kind=${{ steps.prepare.outputs.kind }}
          echo docker_tag=${{ steps.prepare.outputs.docker_tag }}

      - name: Deploy Release Build
        if: steps.prepare.outputs.category == 'publish' && steps.prepare.outputs.kind == 'release'
        uses: superfly/flyctl-actions@master
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        with:
          args: "deploy --app quarterly-preview --image ${{ steps.prepare.outputs.docker_tag }} --config ./preview/fly.toml --verbose"

      - name: Deploy Branch Build
        if: steps.prepare.outputs.category == 'publish' && steps.prepare.outputs.kind == 'branch-build'
        uses: superfly/flyctl-actions@master
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        with:
          args: "deploy --app quarterly-preview-branch-build --image ${{ steps.prepare.outputs.docker_tag }} --config ./preview/fly.toml --verbose"
